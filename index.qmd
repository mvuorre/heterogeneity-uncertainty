---
title: Communicating causal effect heterogeneity
running-head: Communicating heterogeneity
author: 
  - name: Matti Vuorre
    orcid: 0000-0001-5052-066X
    email: mjvuorre@uvt.nl
    corresponding: true
    affiliation: 
      - ref: 1
  - name: Matthew Kay
    orcid: 0000-0001-9446-0419
    affiliation:
      - ref: 2
  - name: Niall Bolger
    orcid: 0000-0001-8698-8117
    affiliation:
      - ref: 3
affiliations:
  - id: 1
    name: Tilburg University
    department: Department of Social Psychology
  - id: 2
    name: Northwestern University
    department: Computer Science and Communication Studies
  - id: 3
    name: Columbia University
    department: Department of Psychology
abstract: |
  Advances in experimental, data collection, and analysis methods have brought population variability in psychological phenomena to the fore. Yet, current practices for interpreting such heterogeneity do not appropriately treat the uncertainty inevitable in any statistical summary. Heterogeneity is best thought of as a distribution of features with a mean (average personâ€™s effect) and variance (between-person differences). This expected heterogeneity distribution can be further summarized e.g. as a heterogeneity interval [@bolgerCausalProcessesPsychology2019]. However, because empirical studies estimate the underlying mean and variance parameters with uncertainty, the expected distribution and interval will underestimate the actual range of plausible effects in the population. Using Bayesian hierarchical models, and with the aid of empirical datasets from social and cognitive psychology, we provide a walk-through of effective heterogeneity reporting and display tools that appropriately convey measures of uncertainty. We cover interval, proportion, and ratio measures of heterogeneity and their estimation and interpretation. These tools can be a spur to theory building, allowing researchers to widen their focus from population averages to population heterogeneity in psychological phenomena.
keywords: [heterogeneity, uncertainty, variation, hierarchical model, statistics]
authornote: |
  This manuscript is not yet peer-reviewed.
bibliography: bibliography.bib
citeproc: true
csl: apa.csl
---

```{r}
#| label: setup
#| include: false

# Packages
library(janitor)
library(scales)
library(ellipse)
library(tinytable)
library(cmdstanr)
library(readxl)
library(lme4)
library(ggpp)
library(patchwork)
library(latex2exp)
library(ggdist)
library(ggstance)
library(tidybayes)
library(distributional)
library(posterior)
library(parameters)
library(brms)
library(tidyverse)
library(knitr)


# Output options
opts_chunk$set(
  eval = TRUE,
  cache = TRUE,
  warning = FALSE,
  error = FALSE,
  message = FALSE,
  echo = FALSE
)
options(digits = 2)
options(tinytable_tt_digits = 3)

# Plotting options
theme_set(
  theme_classic(base_size = 9) +
    theme(
      strip.text = element_text(color = "black", hjust = 0),
      strip.background = element_rect(color = NA, fill = NA),
      strip.text.x = element_text(size = rel(0.9)),
      line = element_line(linewidth = .25),
      plot.tag = element_text(size = rel(1))
    )
)

# Model estimation options, customize in .Renviron
dir.create("models", FALSE)
options(
  brms.backend = Sys.getenv("BRMS_BACKEND", "rstan"), 
  brms.threads = as.numeric(Sys.getenv("MAX_CORES"), 1),
  mc.cores = as.numeric(Sys.getenv("MAX_CORES"), 4)
)
```

When building and testing theories, psychologists have long focused on asking whether an effect exists and what its magnitude might be. Yet, establishing that an independent variable affects a dependent variable, possibly to some specific extent, may not be a sufficient description of the phenomenon if the effect varies appreciably from one treatment unit (e.g. person) to another. The relevance of such variation in the effect, or *heterogeneity*, for theory development is recognized yet typically insufficiently described in the empirical literature [@bolgerCausalProcessesPsychology2019; @brandCausalEffectHeterogeneity2013; @gricePersonsEffectSizes2020; @richters2021].

One reason for the scarcity of reporting and sufficiently interpreting heterogeneity is that psychologists still commonly analyze data with models that obscure its assessment, such as traditional ANOVA [@bolgerCausalProcessesPsychology2019]. However, more informative modeling is not the only challenge: Although more informative hierarchical (or multilevel, mixed-effects [@gelmanDataAnalysisUsing2007]) models are becoming widespread, many users do not yet have the conceptual and practical tools to benefit from the greater explanatory power such models afford.

When person-to-person variability is modeled and reported, those descriptions often focus on point estimates [@bolgerCausalProcessesPsychology2019], sample statistics [@beyensEffectSocialMedia2020; @vuorreThreeObjectionsNovel2022; @gricePersonsEffectSizes2020], graphical displays that don't yield numerical estimates of hypothetical data-generating mechanisms [@beck2022], or quantities such as the standard deviation of person-specific parameters [@bartosFairCoinsTend2023]. These, as we will show, provide an incomplete picture of variation that is sometimes difficult to interpret: If (e.g.) a treatment effect is found for 60% or participants in a sample but the uncertainty inherent in that percentage is not communicated, we cannot make inferential conclusions about the effect's prevalence in the population. Therefore, to communicate heterogeneity effectively we need not only meaningful measures of it, but also effective methods for describing the associated uncertainties. Our goal in this paper is to address this challenge by illustrating measures of heterogeneity and how to communicate them, both numerically and graphically, in ways that take uncertainty into account.

Our plan is as follows. First, we review established methods for estimating and communicating expected heterogeneity of causal effects in the population using an example dataset from social psychology. We then describe additional ways in which model parameters can be transformed to describe distributions of causal effects. We review the concepts and computations underlying three heterogeneity metrics: The effect's mean and standard deviation in the population; the heterogeneity interval; and the prevalence proportion. Second, we move beyond summarizing expected degrees of heterogeneity that lack information about uncertainty to describing distributions of plausible degrees of heterogeneity. Such uncertainty distributions of population feature distributions are natural components of Bayesian hierarchical models and afford efficient tools for describing distributional uncertainty. Finally, we extend these methods to compare heterogeneity across different populations using an example dataset from cognitive psychology.

# Review of heterogeneity

To begin our exposition, we reproduce the analyses presented in @bolgerCausalProcessesPsychology2019. In their study, which replicated findings first presented in @scholerInflatingDeflatingSelf2014, 62 participants saw twenty positively and twenty negatively valenced words, and judged whether each word was self-descriptive or not. Because most people are typically motivated to view themselves positively, @bolgerCausalProcessesPsychology2019 predicted that responses to positively valenced words would be faster than to negatively valenced words [@scholerInflatingDeflatingSelf2014].

```{r}
#| label: data-bolgeretal
#| include: false

dir.create("data", FALSE)
# Load, save, & clean example data from Bolger et al. (2019)
path <- "data/bolger-etal.zip"
if (!file.exists(path)) {
  download.file(
    "https://github.com/kzee/heterogeneityproject/archive/refs/heads/master.zip",
    destfile = path
  )
  unzip(path, exdir = str_remove(path, ".zip"), junkpaths = TRUE)
}

# Save variables as numerical & factor
dat <- read_csv("data/bolger-etal/heterogeneity_dataset1_traitvalence.csv") |>
  # Cleaning as in Bolger et al 2019
  filter(
    response.keys == "up",
    scale(rt) < 3,
    !(id %in% c(250, 257, 272))
  ) |>
  # Some more cleaning
  mutate(
    person = fct_anon(factor(id)),
    trial,
    valence = factor(
      valenceE,
      levels = c(-0.5, 0.5),
      labels = c("Negative", "Positive")
    ),
    rt = logrt
  ) |>
  select(person, trial, valence, rt) |>
  arrange(person, trial)

contrasts(dat$valence) <- c(-0.5, 0.5)
contrasts(dat$valence)
```

## Model 1

In this section, we replicate @bolgerCausalProcessesPsychology2019's analysis, using their openly available data. We first wrangled the data as in @bolgerCausalProcessesPsychology2019, which led to a sample of `r number(nrow(dat), big.mark = ",")` trials from `r length(unique(dat$person))` participants that were endorsed as self-descriptive. Our online analysis supplement (<https://osf.io/yp2gq>) includes the complete code to reproduce this manuscript and computations therein. We show a sample of these data in @tbl-dat1.

```{r}
#| label: tbl-dat1
#| tbl-cap: First six rows of example dataset 1 [@bolgerCausalProcessesPsychology2019].

dat |>
  head() |>
  rename(`log(Reaction time)` = rt) |> 
  rename_with(~str_to_sentence(.x)) |> 
  kable()
```

Then, we estimated the same statistical model (@eq-m1-1 - [-@eq-m1-3]). We modeled the log-transformed reaction time of person $j$ on trial $i$ as a random draw from a normal distribution with mean $\eta$ (*eta*), which could differ between trials $i$ and individuals $j$, and standard deviation $\sigma$ (*sigma*), which we assumed constant across individuals and trials as indicated by the lack of subscripts:

$$
\text{logRT}_{ij} \sim \operatorname{Normal}\left(\eta_{ij}, \sigma^2\right).
$$ {#eq-m1-1}

(We recognize that there are better alternatives to modeling the log-transformed RTs as normal, but those are outside the scope of this manuscript.) Then, we specified a model of the mean of the logRT distribution ($\eta_{ij}$) such that the regression coefficients captured our substantive questions:

$$
\eta_{ij} = \beta_0 + \gamma_{0j} + \left(\beta_1 + \gamma_{1j}\right)\text{V}_{ij}.
$$ {#eq-m1-2}

This equation includes two sets of parameters: The first set contains $\beta_0$ (*beta*), the intercept, and $\beta_1$, the slope or effect of valence (V). Parameters in this set do not have subscripts: In the frequentist tradition, they are considered constants---not modelled on covariates---and typically referred to as "fixed" parameters [e.g. @raudenbushHierarchicalLinearModels2002]. The second set of parameters, $\gamma_{0j}$ (*gamma*) and $\gamma_{1j}$, have the subscript $j$ to indicate that they are person-specific deviations from the average intercept and slope, respectively. That is, $\beta_0 + \gamma_{01}$ is the intercept (average reaction time) for person $j=1$. In frequentist texts, these are typically called "random" parameters because they are modeled as varying randomly according to a specified distribution. Following standard multilevel modeling assumptions, we model $\gamma_0$ and $\gamma_1$ as multivariate normal distributed:

$$
\begin{bmatrix} 
  \gamma_0 \\ \gamma_1
\end{bmatrix} \sim 
\operatorname{MVN}\left(
  \begin{bmatrix} 0 \\ 0 \end{bmatrix}, 
  \begin{pmatrix} 
    \tau_0 & \\ 
    \rho &\tau_1 
  \end{pmatrix}
\right).
$$ {#eq-m1-3}

In this equation, we assume that the person-specific deviations $\gamma_0$ and $\gamma_1$ have means of zero (because the means are added to them in equation 1.2), standard deviations $\tau$ (*tau*), and a correlation $\rho$ (*rho*). Perhaps confusingly, $\tau$s and $\rho$ are also sometimes called random effects because they describe random (co)variations of the person-specific effects. To be clear, despite this naming convention they are features of the population, not of any one group or individual.

What these equations mean substantively is that the extent to which the effect of valence on logRT varies around the average effect ($\beta_1$) is estimated by the standard deviation $\tau_1$. $\tau_0$, on the other hand, describes the standard deviation of the population of individuals' average logRTs across negatively and positively valenced words (intercepts). Moreover, $\rho$ indicates the extent to which individuals' average logRTs correlate with how much their logRTs are affected by valence.

Finally, we contrast coded valence such that negative words were assigned -0.5, and positive words 0.5. This coding results in an intercept that corresponds to the average reaction time across negative and positive words, and a slope that reflects the difference in logRT between negative and positive words.

With data shown in @tbl-dat1, we can estimate this model using standard (restricted) maximum likelihood methods as implemented in, for example, the R package lme4 [@batesFittingLinearMixedEffects2015; @rcoreteamLanguageEnvironmentStatistical2023].

```{r}
#| label: fit1-lmer

fit_lmer <- lmer(
  rt ~ 1 + valence + (1 + valence | person),
  data = dat
)
```

```{r}
# Create a table of coefficients
tab_1 <- model_parameters(fit_lmer, effects = "all") |>
  tibble() |>
  select(Parameter, Coefficient, starts_with("CI_"))

# Bootstrap CIs for variance parameters
path <- "models/lmer-fit1-bootstrap.rds"
if (!file.exists(path)) {
  boots <- confint(
    fit_lmer,
    method = "boot",
    nsim = 1000,
    oldNames = FALSE
  )
  saveRDS(boots, path)
} else {
  boots <- readRDS(path)
}
tab_1[3:6, 3:4] <- boots[c(1, 3, 2, 4), ]

# Get approx SEs
tab_1 <- tab_1 |> 
  mutate(SE = (CI_high - Coefficient) / 1.96) |> 
  select(Parameter, Coefficient, SE, CI_low, CI_high)

m1_parnames <- c(
  "$\\beta_0$", "$\\beta_1$",
  "$\\tau_0$", "$\\tau_1$",
  "$\\rho$", "$\\sigma$"
)
mu1n <- tab_1[2, 2, TRUE]
mu1n_low <- tab_1[2, "CI_low", TRUE]
sd1n <- tab_1[4, 2, TRUE]
sd1n_low <- tab_1[4, "CI_low", TRUE]
mu1 <- number(
  as.numeric(tab_1[2, c("Coefficient", "CI_low", "CI_high"), TRUE]), 
  .01
)
sd1 <- number(
  as.numeric(tab_1[4, c("Coefficient", "CI_low", "CI_high"), TRUE]), 
  .01
)

dist_ml <- dist_normal(mu1n, sd1n)
```

```{r}
#| label: tbl-lmer
#| tbl-cap: Parameter estimates from Model 1 (ML).

tab_1 |>
  mutate(
    mutate(across(where(is.numeric), ~number(.x, .01))),
    `95% CI` = str_glue("[{CI_low}, {CI_high}]"),
    Parameter = m1_parnames
  ) |> 
  select(
    Parameter, Coefficient, SE, `95% CI`
  ) |>
  kable()
```

We show a conventional summary of this model's estimated parameters in @tbl-lmer. For the average person, the estimated effect of positive valence on logRT is `r mu1[1]` log seconds, with a 95% confidence interval (CI) extending from `r mu1[2]` to `r mu1[3]`. The estimated standard deviation of valence effects in the population is `r sd1[1]` log seconds. The lme4 software package does not report a standard error or CI for (co)variance parameters by default, and we therefore calculated it by bootstrapping. The resulting 95% bootstrap CI of the valence effect's standard deviation was [`r sd1[2]`, `r sd1[3]`].

## Heterogeneity distribution at maximum likelihood estimate of $\beta_1$ and $\tau_1$

```{r}
#| label: descriptors
#| include: false

# Heterogeneity interval
hi90_num <- qnorm(c(0.05, .95), mu1n, sd1n)
hi90 <- paste(
  number(hi90_num, .01),
  collapse = ", "
)
hi90_low <- paste(
  number(qnorm(c(0.05, .95), mu1n_low, sd1n_low), .01),
  collapse = ", "
)

# Proportions
p_less_zero <- percent(pnorm(0, mu1n, sd1n), .1)
p_rope <- percent(pnorm(0.1, mu1n, sd1n) - pnorm(-0.1, mu1n, sd1n), .1)
# Ratio
ratio <- number(abs(sd1n / mu1n), .01)
ratio_low <- number(abs(sd1n_low / mu1n_low), .01)
```

```{r}
#| label: fig-1
#| fig-height: 2
#| fig-width: 7
#| fig-cap: Heterogeneity distribution of valence effects and various descriptions of their expected heterogeneity as estimated with Model 1. **A.** The normal density curve defined by the point estimates of the valence effect distribution's mean ($\beta_1$) and standard deviation ($\tau_1$). Shaded areas represent areas under the normal curve within 1 (dark) and 2 (light) standard deviations of the mean. **B.** The 90\% Heterogeneity Interval as represented by a line segment with arrows, and the blue shaded area. **C.** Proportion of negative valence effects in the population (blue). **D.** Proportion of valence effects in the population that are within the region of practical equivalence to zero (ROPE; blue).

# annotation definitions
valence_dist_color = "gray25"
valence_dist_samples_color = "gray65"
desc_color = "dodgerblue1"
desc_color_dark = "dodgerblue4"
zero_color = alpha("black", 0.75)

arrowhead <- \(...) arrow(length = unit(4, "pt"), type = "closed", ...)

fig_1 <- ggplot() +
  aes(xdist = dist_normal(mu1n, sd1n)) +
  scale_x_continuous(breaks = extended_breaks()) +
  coord_cartesian(xlim = c(-0.55, 0.25)) +
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_text(lineheight = rel(0.5)),
    plot.title.position = "plot"
  ) +
  scale_y_continuous(
    expand = expansion(c(0.0, 0.05))
  ) +
  labs(
    y = "Density",
    x = "Valence effect"
  ) +
  theme(
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    legend.position = "none"
  )

d1 <- dist_normal(mu1n, sd1n) |>
  mean_qi(.width = c(.66, .9))

fig_1_params <- fig_1 +
  stat_slab(
    aes(fill = after_stat(level)),
    .width = c(.68, .95),
    p_limits = c(.000001, .999999),
    slab_color = "grey10",
    slab_linewidth = .4
  ) +
  geom_text(
    label = TeX("$\\tau_1$"),
    x = mu1n + .05, y = .175,
    size = 3,
    parse = TRUE
  ) +
  annotate(
    "segment",
    x = mu1n, xend = mu1n + sd1n, y = .1, yend = .1,
    linewidth = .35,
    arrow = arrowhead()
  ) +
  geom_text(
    label = TeX("$\\beta_1$"),
    x = mu1n - .075, y = .075,
    size = 3,
    parse = TRUE
  ) +
  annotate(
    "segment",
    x = mu1n, xend = mu1n, y = .1, yend = 0,
    linewidth = .35,
    arrow = arrowhead()
  ) +
  scale_fill_manual(values = c("grey90", "grey80"), na.value = "white") +
  labs(subtitle = "A. Heterogeneity distribution") +
  theme(axis.title.y = element_text(angle = 90))

fig_1_descriptors <- fig_1 +
  scale_fill_manual(values = c("grey90", alpha(desc_color, 0.45)), na.value = "white")

fig_1_interval <- fig_1_descriptors +
  stat_slab(
    aes(fill = after_stat(level)),
    .width = c(.90, 1),
    p_limits = c(.000001, .999999),
    slab_color = "grey10",
    slab_linewidth = .4
  ) +
  geom_text(
    label = TeX("$HI_{90}$"),
    x = mu1n, y = .175,
    size = 3,
    parse = TRUE,
    color = desc_color_dark
  ) +
  annotate(
    "segment",
    x = d1$.lower[2], xend = d1$.upper[2], y = .1, yend = .1,
    linewidth = .35,
    arrow = arrowhead(ends = "both"),
    color = desc_color_dark
  ) +
  labs(subtitle = "B. Heterogeneity interval")


fig_1_pneg <- fig_1_descriptors +
  stat_slab(
    aes(fill = after_stat(x < 0)),
    p_limits = c(.000001, .999999),
    slab_color = "grey10",
    slab_linewidth = .4
  ) +
  geom_text(
    label = TeX("$p^-$"),
    x = mu1n, y = .175,
    size = 3,
    parse = TRUE,
    color = desc_color_dark
  ) +
  labs(subtitle = "C. Proportion negative")

fig_1_prope <- fig_1_descriptors +
  stat_slab(
    aes(fill = after_stat(between(x, -.1, .1))),
    p_limits = c(.000001, .999999),
    slab_color = "grey10",
    slab_linewidth = .4
  ) +
  geom_text(
    label = TeX("$p^{ROPE}$"),
    x = 0.0, y = 0.5, hjust = 0,
    size = 3.5,
    parse = TRUE,
    color = desc_color_dark
  ) +
  labs(subtitle = "D. Proportion in ROPE")

fig_1_params | fig_1_interval | fig_1_pneg | fig_1_prope
```

Rows 2 and 4 in @tbl-lmer define the expected normal distribution of valence effects in the population, visualized in @fig-1 A. In other words, our point estimate of the distribution of valence effects is Normal(`r mu1[1]`, `r sd1[1]`^2^). However, this distribution is an incomplete description of heterogeneity for two reasons. First, it does not incorporate uncertainty in the two determinants of heterogeneity, that is $\beta_1$ and $\tau_1$: If they are precisely estimated, i.e. when uncertainty regarding them is negligible, the distribution and any quantities calculated from it characterize the population well. On the other hand, if they are estimated with considerable uncertainty, the distribution or its transformations would not characterize the population well. We return to this key issue below. Second, the distribution or its parameters do not, for many purposes, communicate heterogeneity in clear and actionable terms. Below, we introduce several metrics that directly describe e.g. where a given proportion of the slopes are expected to fall.

### Interval descriptors

First, we can use the point estimates in @tbl-lmer to construct an expected *heterogeneity interval* that describes the range within which a certain percentage of the population's slopes are expected to fall [@bolgerCausalProcessesPsychology2019]. To do so, we must first determine an appropriate percentage to describe: By convention, @bolgerCausalProcessesPsychology2019 and others have focused on the 95% heterogeneity interval ($\textit{HI}_{95}$). However, because there are already confusingly many quantities using the five percent cutoff, in this manuscript we focus on the 90% heterogeneity interval, and reserve 95% to describing uncertainties. The appropriate percentage to describe with a heterogeneity interval is determined by the substantive and communicative aims at hand; for our illustration 90% seemed reasonable.

```{r}
#| label: fig-ml-interval
#| fig-width: 4.5
#| fig-height: 2.2
#| fig-cap: "Construction of point estimates of the limits of the heterogeneity interval. **A.** While $\\textit{HI}_{90}$ can be depicted on the probability density function (PDF), **B.** its construction is easier to depict on the cumulative distribution function (CDF), $\\Phi(x; \\beta_1, \\tau_1)$. To construct a 90% heterogeneity interval, we pass 0.05 and 0.95 to the inverse of the CDF: $\\textit{HI}_{90} = \\Phi^{-1}\\left([0.05, 0.95]; \\beta_1, \\tau_1 \\right)$."

# Shared Y axis
scale_y_01 <- scale_y_continuous(
  breaks = c(0, 0.5, 1),
  expand = expansion(c(0.005, 0.005)),
  limits = c(0, 1)
)

# shared x axis
xmin <- -0.6
xmax <- 0.3
scale_x_valence <- \(..., breaks = extended_breaks()) scale_x_continuous(
  ...,
  limits = c(xmin, xmax),
  expand = expansion(0),
  breaks = breaks
)

# ML estimate of CDF
fig_ml_cdf <-
  ggplot() +
  aes(xdist = dist_ml) +
  stat_slab(
    aes(thickness = after_stat(thickness(cdf))),
    scale = 1,
    linewidth = .8,
    color = valence_dist_color,
    fill = NA
  ) +
  geom_text(
    aes(x = I(1), y = 0.97),
    label = expression(bold(Phi)),
    vjust = 1,
    hjust = 1,
    family = "serif"
  ) +
  theme(legend.position = "none") +
  scale_y_01 +
  xlab("Valence effect") +
  ylab(quote(Pr("Valence effect" <= italic(x)))) +
  theme(plot.title.position = "plot")

# construction of HI_90 on the CDF
fig_ml_cdf_interval <- fig_ml_cdf +
  geom_segment(
    aes(x = I(0), xend = quantile(dist_ml, 0.05), y = 0.05, yend = 0.05),
    color = desc_color
  ) +
  geom_segment(
    aes(x = quantile(dist_ml, 0.05), xend = quantile(dist_ml, 0.05), y = 0.05, yend = 0),
    color = desc_color
  ) +
  geom_segment(
    aes(x = I(0), xend = quantile(dist_ml, 0.95), y = 0.95, yend = 0.95),
    color = desc_color
  ) +
  geom_segment(
    aes(x = quantile(dist_ml, 0.95), xend = quantile(dist_ml, 0.95), y = 0.95, yend = 0),
    color = desc_color
  ) +
  geom_segment(
    aes(x = quantile(dist_ml, 0.05), xend = quantile(dist_ml, 0.95), y = 0.025, yend = 0.025),
    color = desc_color,
    arrow = arrowhead(ends = "both")
  ) +
  geom_text(
    aes(x = mu1n, y = .04),
    label = expression(bold(HI)[bold("90")]),
    data = data.frame()[1,],
    size = 3,
    parse = TRUE,
    color = desc_color,
    vjust = 0
  ) +
  annotate("text",
    x = xmin,
    y = c(0.05, 0.95),
    vjust = c(0.3, 0.7),
    label = c(0.05, 0.95),
    color = desc_color,
    hjust = 1.1,
    fontface = "bold",
    size = 2.5
  ) +
  scale_x_valence() +
  coord_cartesian(clip = "off", ylim = c(0,1)) +
  labs(subtitle = TeX("B. $HI_{90}$ on the CDF"))

(
  (fig_1_interval + labs(subtitle = TeX("A. $HI_{90}$ on the PDF"))) +
  fig_ml_cdf_interval
) &
  theme(axis.title.y = element_text(angle = 90))
```

To calculate a heterogeneity interval, we first specify the desired probability limits: 
for a $\pi\%$ interval, we use the limits $(1 \pm \pi)/2$. Thus, for a 90% interval, we use 0.05 and 0.95, which together define the central 90% of the distribution. Then, we pass those limits and the estimated mean and standard deviation to the normal quantile function $\Phi^{-1}$ (*phi*, `qnorm()` in R), to get the interval: $\textit{HI}_{90} = \Phi^{-1}([.05, .95]; \beta_1, \tau_1) = \Phi^{-1}([.05, .95];$ `r mu1[1]`, `r sd1[1]`) = [`r hi90`]. In words, this function calculates the 0.05 and 0.95 quantiles of the normal distribution defined by the point estimates of the mean ($\beta_1$) and standard deviation ($\tau_1$): We expect 90% of valence effects in the population to fall in the [`r hi90`] interval. We illustrate this interval in @fig-ml-interval.

### Proportion descriptors

The above HI summarizes where a given proportion of individuals' effects in the population are. In contrast, some applications might find it more informative to summarize proportions of effects above or below some critical value, or within some critical range. For example, we might ask "What proportion of individuals in the population respond faster to positively valenced words?" In other words, we ask a question of *prevalence*: What proportion of the heterogeneity distribution is below zero? We label this quantity $p^-$ for proportion of population with negative effects.

```{r}
#| label: fig-ml-pneg
#| fig-width: 4.5
#| fig-height: 2.2
#| fig-cap: "Construction of the point estimate of the proportion of negative effects. **A.** While $p^{-}$ can be depicted on the probability density function (PDF), **B.** its construction is easier to depict on the cumulative distribution function (CDF): $p^{-} = \\Phi(0; \\beta_1, \\tau_1)$."

zero_line = geom_vline(
  xintercept = 0,
  linetype = "22",
  color = zero_color,
  alpha = 0.25
)

# construction of p^- on the CDF
fig_ml_cdf_pneg <- fig_ml_cdf +
  zero_line +
  geom_segment(
    aes(x = 0, xend = 0, y = 0, yend = cdf(dist_ml, 0)),
    color = desc_color
  ) +
  geom_segment(
    aes(x = 0, xend = I(0), y = cdf(dist_ml, 0)),
    color = desc_color,
    arrow = arrowhead()
  ) + 
  annotate("text", 
    x = 0, y = I(0),
    label = "0", 
    color = desc_color, 
    vjust = 1.35, 
    fontface = "bold", 
    size = 3
  ) +
  geom_text( 
    aes(x = I(0), y = cdf(dist_ml, 0)),
    label = expression(bold(p ^ "âˆ’")), 
    color = desc_color, 
    hjust = 1.2,
    vjust = 0.6,
    fontface = "bold", 
    size = 3
  ) +
  scale_x_valence(breaks = c(-0.4, -0.2, 0.2)) +
  coord_cartesian(clip = "off", ylim = c(0,1)) +
  labs(subtitle = TeX("B. $p^-$ on the CDF"))

(
  (fig_1_pneg + zero_line + labs(subtitle = TeX("A. $p^-$ on the PDF"))) +
  fig_ml_cdf_pneg
) &
  theme(axis.title.y = element_text(angle = 90))
```

To answer, we pass zero (the critical value) and the estimated mean and standard deviation to the normal cumulative distribution function ($\Phi$; `pnorm()` in R): 
$p^{-} = Pr(\textrm{Valence effect} \le 0) = \Phi(0; \beta_1, \tau_1) = \Phi(0;$ `r mu1[1]`, `r sd1[1]`) = `r p_less_zero`. This number is the probability that a random slope from this population would take a negative value, or, in other words, the proportion of individuals in the population with negative valence effects. We illustrate this probability in @fig-1 C and its construction using the CDF in @fig-ml-pneg.

However, using zero as a critical value might not be sufficiently informative, especially when theory allows specifying a smallest effect size of interest, or what is known as a region of practical equivalence [ROPE, @anvariUsingAnchorbasedMethods2021; @lakensEquivalenceTestingPsychological2018; @kruschkeBayesianDataAnalysis2017; @kruschkeDoingBayesianData2014]. In common applications, ROPE is used to statistically infer whether an estimated parameter, such as the effect of valence on logRT for the average person, is practically significant. But we can equally well use a theory-informed region of effect sizes to describe and make inferences about the heterogeneity distribution of this effect in the population.

```{r}
#| label: fig-ml-prope
#| fig-width: 4.5
#| fig-height: 2.2
#| fig-cap: "Construction of the point estimate of the proportion of effects in the ROPE. **A.** While $p^{ROPE}$ can be depicted on the probability density function (PDF), **B.** its construction is easier to depict on the cumulative distribution function (CDF): $p^{ROPE} = \\Phi(\\epsilon; \\beta_1, \\tau_1) - \\Phi(- \\epsilon; \\beta_1, \\tau_1)$."

rope_line = geom_vline(
  xintercept = c(-0.1, 0.1),
  linetype = "22",
  color = zero_color,
  alpha = 0.25
)

# construction of p^- on the CDF
fig_ml_cdf_prope <- fig_ml_cdf +
  rope_line +
  geom_segment(
    aes(x = -0.1, xend = -0.1, y = 0, yend = cdf(dist_ml, -0.1)),
    color = desc_color
  ) +
  geom_segment(
    aes(x = -0.1, xend = I(0), y = cdf(dist_ml, -0.1)),
    color = desc_color,
    arrow = arrowhead()
  ) + 
  geom_segment(
    aes(x = 0.1, xend = 0.1, y = 0, yend = cdf(dist_ml, 0.1)),
    color = desc_color
  ) +
  geom_segment(
    aes(x = 0.1, xend = I(0), y = cdf(dist_ml, 0.1)),
    color = desc_color,
    arrow = arrowhead()
  ) + 
  geom_segment(
    aes(x = I(0.09), xend = I(0.09), y = cdf(dist_ml, -0.1), yend = cdf(dist_ml, 0.1)),
    color = desc_color,
    arrow = arrowhead(ends = "both")
  ) +
  annotate("text", 
    x = -0.1, y = I(0),
    label = "âˆ’Îµ",
    color = desc_color, 
    vjust = 1.35, 
    fontface = "bold", 
    size = 3
  ) +
  annotate("text", 
    x = 0.1, y = I(0),
    label = "+Îµ", 
    color = desc_color, 
    vjust = 1.35, 
    fontface = "bold", 
    size = 3
  ) +
  geom_text( 
    aes(x = I(0.12), y = mean(cdf(dist_ml, c(-0.1, 0.1))[[1]])),
    label = expression(bold(p ^ "ROPE")), 
    color = desc_color, 
    hjust = 0,
    vjust = 0.6,
    fontface = "bold", 
    size = 3
  ) +
  scale_x_valence() +
  coord_cartesian(clip = "off", ylim = c(0,1)) +
  labs(subtitle = TeX("B. $p^{ROPE}$ on the CDF"))

(
  (fig_1_prope + rope_line + labs(subtitle = TeX("A. $p^{ROPE}$ on the PDF"))) +
  fig_ml_cdf_prope
) &
  theme(axis.title.y = element_text(angle = 90))
```

For example, let us imagine that a theory states that valence effects in the interval [-0.1, 0.1] are practically equivalent to zero. To calculate, we can again use the normal cumulative distribution function to calculate the proportion of individuals in the population whose valence effect falls within this interval or region of practical equivalence: $p^{ROPE} = Pr(-0.1 \le \textrm{Valence effect} \le 0.1) = \Phi(0.1; \beta_1, \tau_1) - \Phi(-0.1; \beta_1, \tau_1)$ = `r p_rope`. In words, `r p_rope` of the population is expected to have valence effects that are practically equivalent to zero. Note that this statement's validity critically depends on the chosen interval's theoretical validity. We visualize this probability in @fig-ml-prope.

### Ratio descriptors

Although the interval and proportion descriptors describe where the population's slopes are likely to fall, they do so in absolute terms such as logRT in the running example. A contrasting or *relative* way to describe heterogeneity is to express it as a ratio of the effect's standard deviation to its mean. Such relative metrics are concise and can be useful especially when the absolute units are difficult to interpret, or when comparing heterogeneity across different populations or experimental conditions (see below). This ratio, expressed simply as the fraction $\frac{\tau_1}{\beta_1}$ is `r ratio` in the current example.

[@bolgerCausalProcessesPsychology2019, p.609] suggest as a rule of thumb that heterogeneity can be deemed noteworthy when the ratio of the standard deviation to the average effect is 0.25 or greater: A ratio greater than 1/4 implies a $\textit{HI}_{95}$ whose limits extend to effects one-half and one-and-a-half times that of the average effect. With these data and model, the ratio $\frac{\tau_1}{\beta_1}$ is `r ratio`, suggesting that the degree of heterogeneity in valence effects is noteworthy. While this heuristic can sometimes be useful, we urge users to apply domain-specific knowledge when considering critical values or thresholds whenever possible.

## Missing uncertainty

The expected normal distribution of valence effects and its transformations (@fig-1) ignore uncertainty inherent in the estimated parameters. That is, we calculated $\textit{HI}_{90}$, $p^-$, and the other heterogeneity measures from the point estimates $\beta_1$ = `r mu1[1]` and $\tau_1$ = `r sd1[1]`. We did not use any information about the precision, or uncertainty, with which these parameters were estimated. We have now arrived at the crux of the current work: How should we estimate and describe heterogeneity in psychological phenomena such that the fundamental uncertainty in the estimated parameters is retained?

# Incorporating inferential uncertainty to assessments of heterogeneity

Assessments of heterogeneity involve combining information about fixed and random effects; to fully incorporate inferential uncertainty then requires accounting for their joint uncertainties. Probabilistic, that is, Bayesian methods are uniquely able to address this challenge. Modern Bayesian methods, by obtaining draws from the joint posterior distribution of all model parameters presumed to underlie the observed data, allow incorporating posterior uncertainty in combinations of parameters such as the ones highlighted above [@gelmanBayesianDataAnalysis2013; @kruschkeBayesianDataAnalysis2017; @kruschkeDoingBayesianData2014; @mcelreathStatisticalRethinkingBayesian2020]. For typical scenarios, Bayesian models are as easy to use as their maximum likelihood counterparts [@burknerBrmsPackageBayesian2017; @burknerAdvancedBayesianMultilevel2018].

```{r}
#| label: fit1-brms

fit_1 <- brm(
  rt ~ 1 + valence + (1 + valence | person),
  data = dat,
  file = "models/brm-fit-1",
  control = list(adapt_delta = .95)
)

post1 <- as_draws_df(
  fit_1, 
  variable = c("b_", "sd_", "cor_", "sigma"), 
  regex = TRUE
) |>
  mutate(dist_valence = dist_normal(b_valence1, sd_person__valence1))
```

```{r}
#| label: ppcheck-1
#| eval: false

# Quick model checking
pairs(fit_1$fit, pars = variables(fit_1)[1:6])
mcmc_plot(fit_1, type = "rhat_hist")
pp_check(fit_1)
```

The output of Bayesian computations is the multivariate posterior probability distribution of the model's parameters. However, closed-form solutions are not available for multivariate posterior distributions of many important types of statistical models. Therefore, in practice modern Bayesian methods rely on algorithms that yield many random draws from the multivariate posterior distribution [@gelmanBayesianDataAnalysis2013; @ravenzwaaijSimpleIntroductionMarkov2016]. These draws can then be used to calculate, summarize, and visualize any desired quantity of the multivariate posterior such as means, variances, correlations, proportions above or below zero, and so on. @tbl-samples-1 illustrates this, showing six random draws of the posteriors of $\beta_1$ and $\tau_1$ (rows). We then computed their ratio in the third column, which then represents (draws from) the ratio's posterior distribution and can be summarized, visualized, etc.

```{r}
#| label: tbl-samples-1
#| tbl-cap: Random draws from $\beta_1$, $\tau_1$, and their ratio's posterior.

post1 |> 
  head() |> 
  select(c(2, 4)) |> 
  mutate(ratio = sd_person__valence1 / b_valence1) |> 
  set_names(m1_parnames[c(2, 4)], "$\\frac{\\tau_1}{\\beta_1}$") |> 
  kable()
```

In practice, one obtains (for example) 4,000 samples from the posterior distribution using Markov Chain Monte Carlo algorithms [e.g. @standevelopmentteamStanModelingLanguage2023] through accessible software [e.g., @burknerBrmsPackageBayesian2017], and then summarizes them using familiar data processing techniques [e.g. @dplyr2023; @rcoreteamLanguageEnvironmentStatistical2023]. Here, we used the R package brms [@burknerBrmsPackageBayesian2017; @burknerAdvancedBayesianMultilevel2018] to specify the model and then draw random samples from its posterior distribution. The MCMC estimation algorithm completed in about 5 seconds on a modern laptop. We then assessed the estimation algorithm convergence graphically and numerically, and model adequacy using a graphical posterior predictive check [@gelmanBayesianDataAnalysis2013]. (These, and other details, are presented in our supplementary online analyses.)

@tbl-fit-1 shows summaries of Model 1's population-level parameters' ("fixed" parameters in the frequentist nomenclature) posterior distributions. The second and third columns show their means and standard deviations (which correspond to frequentist standard errors). Note that because we used brms's default noninformative prior distributions, the posterior summaries are numerically very similar to the maximum likelihood estimates in @tbl-lmer.

```{r}
#| label: tbl-fit-1
#| tbl-cap: Parameter estimates from Model 1 (Bayes).

fit_1 |>
  parameters(effects = "all", centrality = "mean", dispersion = TRUE) |>
  tibble() |>
  mutate(
    Mean = number(Mean, .01),
    SD = number(SD, .01),
    CI = str_glue("[{number(CI_low, .01)}, {number(CI_high, .01)}]")
  ) |>
  select(Parameter, Mean, SD, `95% CI` = CI) |> 
  mutate(Parameter = m1_parnames) |> 
  kable()
```

## Heterogeneity distribution

Armed with the joint Bayesian posterior distribution of all model parameters (@tbl-fit-1), we can now return to the question of the distribution of valence effects in the population. We now have 4,000 draws from the posterior distribution of the heterogeneity distribution. Within each draw from the posterior distribution, we can perform any calculation we did previously on only the point estimate of the heterogeneity distribution. 

We first recompute the expected heterogeneity distribution from @fig-1 using the posterior mean values of $\beta_1$ and $\tau_1$ in @fig-2 A (thick black curve). Superimposed on that normal density curve are heterogeneity distributions calculated from 100 random posterior draws of $\beta_1$ and $\tau_1$. From these curves we can see that the true distribution of valence effects might well be less or more heterogeneous than is suggested by the expectation (point estimates). We can perform the same exercise on the CDF as well (@fig-2 B).

```{r}
#| label: calc-dfs

set.seed(99)
x <- seq(xmin, xmax, length = 301)

calculate_density <- function(posterior, b, sd) {
  posterior |>
    crossing(x) |>
    mutate(
      pdf = dnorm(x, {{b}}, {{sd}}),
      cdf = pnorm(x, {{b}}, {{sd}})
    )
}

post1_mean <- post1 |>
  mean_qi(b_valence1, sd_person__valence1) |>
  mutate(dist_valence = dist_normal(b_valence1, sd_person__valence1))

post1_density_mean <- post1_mean |>
  calculate_density(b_valence1, sd_person__valence1)

post1_samples <- post1 |>
  slice_sample(n = 100)

post1_density_samples <- post1_samples |>
  calculate_density(b_valence1, sd_person__valence1)

post1_density_ribbon <- post1 |>
  select(b_valence1, sd_person__valence1) |>
  calculate_density(b_valence1, sd_person__valence1) |> 
  group_by(x) |>
  curve_interval(.width = 0.9)
```

```{r}
#| label: person-specific-valence-effects
#| eval: false

# Just sketching a figure of person-specific valence slopes
coef(fit_lmer)$person |> 
  as.data.frame() |> 
  rownames_to_column("person") |> 
  left_join(
    coef(fit_1)$person |> 
      as.data.frame() |> 
      rownames_to_column("person"),
    by = join_by(person)
) |> 
  select(person, MLE = valence1, Bayes = Estimate.valence1) |> 
  pivot_longer(-person) |> 
  ggplot(aes(value, name)) +
  geom_line(aes(group = person)) +
  geom_point()
```

```{r}
#| label: fig-2
#| fig-width: 4.5
#| fig-height: 2.2
#| fig-cap: "Uncertainty in Bayesian estimates of the heterogeneity distribution of valence effects. **A.** Probability density function (PDF) curves. The thick line is the same expected PDF of valence effects from @fig-1. Thin lines show 100 PDFs calculated from random draws of $\\beta_1$ and $\\tau_1$ that collectively illustrate the uncertainty in the distribution's location and spread. **B.** Cumulative distribution function (CDF) curves, annotated as in A."

# Posterior samples of pdf and cdf curves
p_samples <- post1_density_mean |>
  ggplot() +
  aes(x) +
  geom_line(
    data = post1_density_samples,
    aes(group = .draw),
    alpha = .3,
    linewidth = .15,
    color = valence_dist_samples_color
  ) +
  geom_line(
    linewidth = .8,
    col = valence_dist_color
  ) +
  xlab("Valence effect") +
  theme(
    legend.position = "none",
    plot.title.position = "plot"
  )

p_pdf_samples <- p_samples +
  aes(y = pdf) +
  scale_x_valence() +
  scale_y_continuous(
    breaks = extended_breaks(7),
    expand = expansion(c(0.005, 0.005)),
  ) +
  ylab("Probability density") +
  labs(subtitle = "A. Uncertainty in the PDF")

p_cdf_samples <- p_samples +
  aes(y = cdf) +
  scale_x_valence() +
  scale_y_01 +
  ylab(quote(Pr("Valence effect" <= italic(x)))) +
  labs(subtitle = "B. Uncertainty in the CDF")

p_pdf_samples + p_cdf_samples
```

Some curves in @fig-2 A are further to the left (valence effect for the average person is more negative), and some further to the right (effect for the average person is more positive). Moreover, some curves are flatter and wider (effect varies more around the average in the population), and some are narrower and more peaked (effect varies less between individuals). The distribution of these curves represents our current knowledge about the heterogeneity distribution of valence effects in the population---given these data and this model. A sufficient description of heterogeneity therefore must include information about uncertainty in both the location (mean) and scale (standard deviation) parameters of the heterogeneity distribution.

Depicting the heterogeneity distribution as a probability density function (PDF) curve has its drawbacks. First, it appears to us visually more challenging to read the degree of uncertainty from a PDF. Second, for many applications, the y-axis is not informative: We typically do not care that the probability density of the curve is (for example) 3.0 at some specific value of the valence effect.

Therefore, in @fig-2 B we depict the heterogeneity distribution as *cumulative distribution function* (CDF) curves based on 100 random posterior draws, together with the mean CDF in a darker color. We believe the CDF is a useful visualization tool because the y-axis describes a directly interpretable quantity: The proportion of the population with valence effects below some specific value.


### Interval descriptors

```{r}
p1n <- post1 |>
  mutate(
    hi_low = b_valence1 + qnorm(0.05) * sd_person__valence1,
    hi_high = b_valence1 + qnorm(0.95) * sd_person__valence1
  ) |>
  mean_qi(hi_low, hi_high)
p1s <- p1n |>
  mutate(
    across(where(is.numeric), ~ number(., .01)),
    l = str_glue("[{hi_low.lower}, {hi_low.upper}]"),
    u = str_glue("[{hi_high.lower}, {hi_high.upper}]")
  )
```

Above, we described the heterogeneity interval as a range of values where a specific percentage of the population's slopes are expected to fall (e.g. $\textit{HI}_{90}$ for a 90% heterogeneity interval). However, a single interval cannot accommodate the uncertainty with which the underlying parameters are estimated. To carry uncertainty forward from model parameters to the $\textit{HI}_{90}$, we redo the calculations from above, but instead of using only the mean's and standard deviation's point estimates, we repeat the calculations for each of the 4,000 randomly sampled pairs of $\beta_1$ and $\tau_1$. Consequently, we get 4,000 draws from the posterior distribution of $\textit{HI}_{90}$ (@fig-cdfs-intervals).

```{r}
#| label: fig-cdfs-intervals
#| fig-width: 2.5
#| fig-height: 2.2
#| fig-cap: "Uncertainty in the limits of the lower and upper limits of the heterogeneity interval (compare to the point estimates in @fig-ml-interval B). Thin gray lines show 100 CDFs of the heterogeneity distribution calculated from random draws of $\\beta_1$ and $\\tau_1$, as in @fig-2 B. Blue lines show the calculation of the posterior distribution of $\\textit{HI}_{90} = \\Phi^{-1}([0.05, 0.95]; \\beta_1, \\tau_1)$, which is also depicted as marginal histograms. Point estimates and intervals represent the posterior mean and 95\\%CI."

# Add summaries of CDF < 0 to CDF curves as inset plots
p_cdf_intervals <- p_cdf_samples +
  geom_segment(
    aes(x = I(0), xend = quantile(dist_valence, 0.05), y = 0.05, yend = 0.05),
    data = post1_samples,
    color = desc_color,
    alpha = 0.05
  ) +
  geom_segment(
    aes(x = quantile(dist_valence, 0.05), xend = quantile(dist_valence, 0.05), y = 0.05, yend = 0),
    data = post1_samples,
    color = desc_color,
    alpha = 0.1
  ) +
  geom_segment(
    aes(x = I(0), xend = quantile(dist_valence, 0.95), y = 0.95, yend = 0.95),
    data = post1_samples,
    color = desc_color,
    alpha = 0.05
  ) +
  geom_segment(
    aes(x = quantile(dist_valence, 0.95), xend = quantile(dist_valence, 0.95), y = 0.95, yend = 0),
    data = post1_samples,
    color = desc_color,
    alpha = 0.1
  ) +
  stat_histinterval(
    aes(x = quantile(dist_valence, 0.05)),
    y = 0,
    data = post1,
    breaks = 50,
    fill = alpha(desc_color, 0.35),
    color = desc_color_dark,
    side = "bottom",
    .width = .95,
    scale = 1,
    height = 0.1
  ) +
  stat_histinterval(
    aes(x = quantile(dist_valence, 0.95)),
    y = 0,
    data = post1,
    breaks = 50,
    fill = alpha(desc_color, 0.35),
    color = desc_color_dark,
    side = "bottom",
    .width = .95,
    scale = 1,
    height = 0.1
  ) +
  annotate("text",
    x = min(x),
    y = c(0.05, 0.95),
    vjust = c(0.3, 0.7),
    label = c(0.05, 0.95),
    color = desc_color,
    hjust = 1.1,
    fontface = "bold",
    size = 2.5
  ) +
  scale_x_valence() +
  scale_y_continuous(
    breaks = c(0, 0.5, 1),
    expand = expansion(0)
  ) +
  coord_cartesian(clip = "off", ylim = c(0,1)) +
  theme(plot.title.position = "panel") +
  labs(subtitle = TeX("Uncertainty in the limits of $HI_{90}$"))

p_cdf_intervals
```

Summarizing a distribution of intervals entails some challenges, however, because an interval is defined by two quantities---the lower and upper bounds. The 95% most plausible lower bounds of $\textit{HI}_{90}$ range between `r p1s$l`, whereas the 95% most credible upper bounds range between `r p1s$u` (marginal histograms in @fig-cdfs-intervals, or @fig-intervals B). Thus, to adequately describe an estimated heterogeneity interval, researchers must communicate two separate uncertainty intervals: In words, we estimate that 90% of the population's valence effects range from `r paste(p1s$hi_low, p1s$l)` to `r paste(p1s$hi_high, p1s$u)`.

```{r}
#| label: fig-intervals
#| fig-width: 5.4
#| fig-height: 2.7
#| fig-cap: Correlation in Bayesian estimates of the 90% heterogeneity interval of valence effects. **A.** Scatterplot of 4,000 posterior draws of the lower (x-axis) and upper (y-axis) limits of $\textit{HI}_{90}$. **B.** Histograms of 4,000 draws of the $\textit{HI}_{90}$ lower (left) and upper (right) limits with their posterior means and 95% CIs as points and intervals. **C.** 100 random draws from the posterior distribution of $\textit{HI}_{90}$, with the posterior mean heterogeneity interval superimposed in a darker shade of blue.

p1 <- post1 |>
  mutate(
    hi_low = b_valence1 + qnorm(0.05) * sd_person__valence1,
    hi_high = b_valence1 + qnorm(0.95) * sd_person__valence1
  ) |>
  ggplot(aes(hi_low, hi_high)) +
  labs(x = TeX("$HI_{90}$ lower limit"), y = TeX("$HI_{90}$ upper limit")) +
  geom_point(
    alpha = .25,
    shape = 1,
    size = 0.75,
    col = desc_color
  ) +
  theme(
    aspect.ratio = 1,
    plot.title.position = "plot"
  ) +
  labs(subtitle = TeX("A. Correlation in the limits of $HI_{90}$"))

p2 <- post1 |>
  mutate(
    hi_low = b_valence1 + qnorm(0.05) * sd_person__valence1,
    hi_high = b_valence1 + qnorm(0.95) * sd_person__valence1
  ) |>
  select(hi_low, hi_high) |>
  pivot_longer(everything()) |>
  ggplot(aes(value, group = name)) +
  scale_y_continuous(
    expand = expansion(c(0, 0.1))
  ) +
  scale_x_valence() +
  stat_histinterval(
    breaks = 100,
    fill = alpha(desc_color, .33),
    color = desc_color_dark,
    .width = c(.95),
    justification = .01
  ) +
  theme(
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    plot.title.position = "plot"
  ) +
  coord_cartesian(clip = "off") +
  xlab(NULL) +
  labs(subtitle = TeX("B. Uncertainty in the limits of $HI_{90}$"))

p3 <- post1_density_samples |> 
  distinct(
    .draw, 
    b_valence1, 
    sd_person__valence1
) |>
  arrange(b_valence1) |>
  mutate(i = 1:n()) |>
  mutate(
    dist = dist_normal(b_valence1, sd_person__valence1)
  ) |>
  ggplot() +
  scale_x_valence("Valence effect") +
  scale_y_continuous(
    expand = expansion(0.025),
    labels = NULL
  ) +
  labs(y = "Posterior draw") +
  stat_pointinterval(
    aes(xdist = dist, y = i),
    .width = .9,
    interval_size_range = c(.15, .3),
    alpha = .5,
    color = desc_color
  ) +
  geom_pointinterval(
    data = post1 |>
      summarise(
        across(c(b_valence1, sd_person__valence1), mean)
      ) |>
      mutate(
        hi_low = b_valence1 + qnorm(0.05) * sd_person__valence1,
        hi_high = b_valence1 + qnorm(0.95) * sd_person__valence1
      ),
    aes(y = 50, x = b_valence1, xmin = hi_low, xmax = hi_high),
    color = desc_color_dark
  ) +
  theme(plot.title.position = "plot", axis.ticks.y = element_blank()) +
  labs(subtitle = TeX("C. 100 draws from the distribution of $HI_{90}$"))

p1 + 
((p2 + p3) + plot_layout(heights = c(0.3, 0.7)))
  # plot_annotation(tag_levels = "A")
```

@fig-intervals further suggests that communicating the two uncertainty intervals of a heterogeneity interval is not only cumbersome but also ignores potential correlations between the posterior distributions of the HI endpoints (panel A). For these reasons, although the HI can be a useful summary, we occasionally favor [e.g., @vuorreAffectiveUpliftVideo2024] the scalar descriptors discussed below.


### Proportion descriptors

A complementary description of heterogeneity is the proportion of the population whose effects fall above or below some critical value. For example, we can calculate proportions with negative and positive effects by using zero as the critical value. In this example, we ask "What proportion of individuals in the population endorse positive words faster than negative words?"

```{r}
#| label: fig-cdfs-pneg
#| fig-width: 2.5
#| fig-height: 2.2
#| fig-cap: "Uncertainty in the proportion of negative effects (compare to the point estimate in @fig-ml-pneg B). Thin gray lines show 100 CDFs of the heterogeneity distribution calculated from random draws of $\\beta_1$ and $\\tau_1$, as in @fig-2 B. Blue lines show the calculation of the posterior distribution of $p^-$, which is also depicted as a marginal histogram at the top left. The point estimate and interval represents the posterior mean and 95\\%CI."


# Add summaries of CDF < 0 to CDF curves as inset plots
p_cdf_samples_with_p_neg <- p_cdf_samples +
  geom_segment(
    aes(x = 0, xend = 0, y = 0, yend = cdf(dist_valence, 0)),
    data = post1_samples,
    color = desc_color,
    alpha = 0.05
  ) +
  geom_segment(
    aes(x = 0, xend = I(0), y = cdf(dist_valence, 0), yend = cdf(dist_valence, 0)),
    data = post1_samples,
    color = desc_color,
    alpha = 0.1
  ) +
  stat_histinterval(
      aes(y = cdf(dist_valence, 0)),
      x = I(0),
      data = post1,
      breaks = 50,
      fill = alpha(desc_color, 0.35),
      color = desc_color_dark,
      side = "left",
      .width = .95,
      scale = 1,
      width = 0.1
  ) + 
  annotate(
    "text", 
    x = 0, y = I(0), 
    label = "0", 
    color = desc_color, 
    vjust = 1.35, 
    fontface = "bold", 
    size = 3
  ) +
  geom_text( 
    aes(x = I(0), y = cdf(dist_valence, 0)),
    data = post1_mean,
    label = expression(bold(p ^ "âˆ’")), 
    color = desc_color, 
    hjust = 1.5, 
    fontface = "bold", 
    size = 3
  ) +
  scale_x_valence(breaks = c(-0.4, -0.2, 0.2)) +
  coord_cartesian(clip = "off") +
  theme(plot.title.position = "panel") +
  labs(subtitle = TeX("Uncertainty in $p^{-}"))

p_cdf_samples_with_p_neg
```

```{r}
tmp <- post1 |>
  mutate(
    dist = dist_normal(b_valence1, sd_person__valence1),
    pd = cdf(dist, 0),
    rope = cdf(dist, 0.1) - cdf(dist, -0.1),
    ratio = abs(sd_person__valence1 / b_valence1)
  ) |>
  mean_qi(pd, rope, ratio) |>
  mutate(
    pd_r = str_glue(
      "{percent(pd, .1)} [{percent(pd.lower, .1)}, {percent(pd.upper, .1)}]"
    ),
    pd_r_n = str_glue(
      "{percent(1-pd, .1)} [{percent(1-pd.upper, .1)}, {percent(1-pd.lower, .1)}]"
    ),
    rope_r = str_glue(
      "{percent(rope, .1)} [{percent(rope.lower, .1)}, {percent(rope.upper, .1)}]"
    ),
    rope_r_n = str_glue(
      "{percent(1-rope, .1)} [{percent(1-rope.upper, .1)}, {percent(1-rope.lower, .1)}]"
    ),
    ratio_r = str_glue(
      "{number(ratio, .01)} [{number(ratio.lower, .01)}, {number(ratio.upper, .01)}]"
    )
  )
```

To answer, we calculate $p^- = Pr(\textrm{Valence effect} \le 0) = \Phi(0; \beta_1, \tau_1)$ for each posterior draw of $\beta_1$ and $\tau_1$. We show 100 posterior draws of the CDF in @fig-cdfs-pneg with a vertical line superimposed at zero. The y-axis value where the CDF crosses zero on the x-axis indicates the population proportion of negative valence effects ($p^-$). We also show a histogram of all 4,000 posterior draws of that proportion in the top left margin of @fig-cdfs-pneg, with its associated 95%CI. The model predicts the proportion of individuals in the population with negative valence effects to be approximately `r percent(as.numeric(tmp$pd), .1)` (posterior mean), but with 95% confidence this value could be as low as `r percent(as.numeric(tmp$pd.lower), .1)` or as high as `r percent(as.numeric(tmp$pd.upper), .1)`. Stated differently, the model predicts that `r tmp$pd_r_n` of individuals in the population would show reversals of the valence effect.



```{r}
#| label: fig-pdfs-rope
#| fig-width: 4.6
#| fig-height: 2.4
#| fig-cap: "Uncertainty in the proportion of effects in the ROPE (compare to the point estimate in @fig-ml-prope). **A.** 25 PDFs of heterogeneity distributions drawn from the joint distribution of $\\beta_1$ and $\\tau_1$. In each PDF, the area under the curve within the ROPE of $[-0.1, 0.1]$ is highlighted in blue. **B.** Line segments and points show the size of the area in the ROPE for each corresponding PDF in A. Marginal histogram (bottom) shows the posterior distribution of $p^{ROPE}$ calculated from all 4,000 draws from the joint distribution of $\\beta_1$ and $\\tau_1$. The point estimate and interval represents the posterior mean and 95\\%CI."

rope_n <- 25

post1_samples_rope <- post1_samples |> 
  slice_head(n = rope_n) 

p_rope_densities <- post1_samples_rope |> 
  ggplot() + 
  stat_slab(
    aes(y = factor(.draw), xdist = dist_valence, fill = after_stat(-0.1 < x & x < 0.1)),
    color = "gray90",
    # alpha = 0.5,
    scale = 2.5,
    linewidth = 0.5
  ) +
  annotate("text", 
    x = -0.1, y = I(0),
    label = "âˆ’Îµ",
    color = desc_color, 
    vjust = 1.15, 
    fontface = "bold", 
    size = 3
  ) +
  annotate("text", 
    x = 0.1, y = I(0),
    label = "+Îµ", 
    color = desc_color, 
    vjust = 1.15, 
    fontface = "bold", 
    size = 3
  ) +
  geom_vline(xintercept = c(-0.1, 0.1), zero_color, alpha = 0.1, linetype = "22") +
  scale_fill_manual(values = c("TRUE" = colorspace::lighten(desc_color, 0.35, space = "HLS"), "FALSE" = "gray75")) +
  guides(fill = "none") +
  coord_cartesian(clip = "off") +
  scale_x_valence() +
  scale_y_discrete(labels = NULL) +
  theme(
    axis.ticks.y = element_blank(),
    plot.title.position = "plot"
  ) +
  ylab("Posterior draw") +
  xlab("Valence effect") +
  labs(subtitle = "A. PDFs of heterogeneity distributions")

p_rope_props <- post1_samples_rope |> 
  slice_head(n = 30) |> 
  ggplot() + 
  aes(y = factor(.draw), x = cdf(dist_valence, 0.1) - cdf(dist_valence, -0.1)) + 
  geom_segment(aes(xend = 0, yend = factor(.draw)), color = desc_color) + 
  geom_point(color = desc_color, size = 0.75) + 
  scale_x_continuous(limits = c(0,1), expand = expansion(0)) +
  scale_y_discrete(labels = NULL) +
  theme(
    axis.ticks.y = element_blank(),
    plot.title.position = "plot"
  ) +
  ylab(NULL) +
  xlab(TeX("$p^{ROPE}$")) +
  labs(subtitle = TeX("B. Uncertainty in $p^{ROPE}$")) +
  stat_histinterval(
    aes(x = cdf(dist_valence, 0.1) - cdf(dist_valence, -0.1)),
    y = 0.1,
    data = post1,
    breaks = 50,
    fill = alpha(desc_color, 0.35),
    color = desc_color_dark,
    side = "bottom",
    .width = .95,
    scale = 1,
    height = 4
  ) +
  coord_cartesian(clip = "off", ylim = c(0.7, nrow(post1_samples_rope)))
  

p_rope_densities + p_rope_props
```

Moreover, if theory allows defining a range of parameter values that are practically equivalent to zero (ROPE), we can use the posterior distribution to quantify uncertainty in the proportion of individuals predicted to have such practically negligible effects. Dotted vertical lines in @fig-pdfs-rope A highlight the [-0.1, 0.1] interval, which serves as an example ROPE. The area under the PDF within that interval represent the proportion of the population whose valence effect is practically equivalent to zero ($p^{ROPE}$), and each line in @fig-pdfs-rope B depicts the corresponding area under the curve from @fig-pdfs-rope A. To quantify uncertainty in $p^{ROPE}$ we then aggregate these values to a mean and a 95%CI: `r tmp$rope_r` of individuals in the population have a valence effect that is practically equivalent to zero. We note that the ROPE of [-0.1, 0.1] here was arbitrary and picked just to illustrate the example.

So far, these examples have highlighted the importance of quantifying uncertainty in descriptions of heterogeneity. Had we only focused on the point estimates (posterior means), we might have misleadingly concluded that $p^-$ = `r percent(tmp$pd, .1)` and $p^{ROPE}$ = `r percent(tmp$rope, .1)`. However, with 95% confidence, these values might be as small as `r percent(tmp$pd.lower, .1)` and `r percent(tmp$rope.lower, .1)`, or as large as `r percent(tmp$pd.upper, .1)` and `r percent(tmp$rope.upper, .1)`, respectively.

### Ratio descriptors

Finally, we can assess heterogeneity in relative terms by comparing the magnitude of the heterogeneity in valence effects (the standard deviation $\tau_1$) to the magnitude of the average effect (the mean $\beta_1$) by calculating the ratio $\frac{\tau_1}{\beta_1}$ (see @tbl-samples-1). @fig-ratio shows 4,000 samples from the joint posterior distribution of the mean and standard deviation, from which we calculated 4,000 samples of the posterior distribution of $\frac{\tau_1}{\beta_1}$ (panel B). The ratio `r tmp$ratio_r` suggests that the relative magnitude of heterogeneity is substantial, but might be as low as `r number(tmp$ratio.lower, .01)` or as great as `r number(tmp$ratio.upper, .01)`, with 95% confidence. If we used the 1/4 rule of thumb suggested in @bolgerCausalProcessesPsychology2019, with these results we could say *with confidence* that heterogeneity in valence effects is notable (the entire 95%CI exceeds 0.25).

```{r}
#| label: fig-ratio
#| fig-height: 2.8
#| fig-width: 4.4
#| fig-cap: Bivariate posterior of $\beta_1$, $\tau_1$, and their ratio. Panel A. 4,000 random draws from the posterior distribution of the valence effect distribution's mean ($\beta_1$) and standard deviation ($\tau_1$). B. Histogram of 4,000 draws from the posterior distribution of the ratio of the valence distribution's scale over its location $\frac{\tau_1}{\beta_1}$, and its posterior mean and 95\%CI.

p1 <- post1 |>
  ggplot(aes(b_valence1, sd_person__valence1)) +
  scale_y_continuous(
    TeX("$\\tau_1$")
  ) +
  scale_x_continuous(
    TeX("$\\beta_1$")
  ) +
  geom_point(
    shape = 1,
    col = "dodgerblue1",
    alpha = .25,
    size = .75
  )
p2 <- post1 |>
  mutate(ratio = abs(sd_person__valence1 / b_valence1)) |>
  ggplot(aes(ratio)) +
  scale_y_continuous(
    "Count",
    expand = expansion(0)
  ) +
  scale_x_continuous(
    TeX("$\\frac{\\tau_1}{\\beta_1}$"),
    breaks = extended_breaks()
  ) +
  stat_histinterval(
    breaks = 100,
    fill = alpha("dodgerblue1", 0.5),
    color = "dodgerblue4",
    .width = .95,
    size = 1,
    justification = 0.01
  ) +
  theme(
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(),
  )
(p1 | p2) &
  theme(
    aspect.ratio = 1
  ) &
  plot_annotation(tag_levels = "A")
```

We have seen that---with these example data and this model---our uncertainty in the estimated heterogeneity metrics is substantial: Point estimates provide at best incomplete descriptions of our current state of knowledge regarding how valence effects vary between people in the population. We will next see that incorporating uncertainty is not only useful but critical when we turn from describing heterogeneity in one population to comparing its magnitude across multiple populations.

\clearpage

# Comparing heterogeneity between populations

We now move beyond assessing heterogeneity in one population to comparing degrees of heterogeneity across multiple populations of study units. To illustrate, we reanalyze a dataset from @mahVariabilitySubjectsFree2024 addressing differences in between-person variability (heterogeneity) in memory performance between a free recall memory task and a cued recall memory task. In @mahVariabilitySubjectsFree2024's Experiment 3, 260 individuals studied a list of twenty target words. After a short break, they then either freely recalled as many of the target words as they could (Free recall group, N = 123) or recalled as many target words as they could when prompted with related cue words (Cued recall group, N = 137). Thus, the Free and Cued recall tasks had different groups of participants but the same target words. The metric of memory performance in this study was the proportion correct. We show a sample of these data in @tbl-dat2.

```{r}
#| label: data-mah-lindsay-3
#| include: false

# Experiment 3: task type is between-person
path <- "data/mah-lindsay-experiment-3.zip"
if (!file.exists(path)) {
  download.file(
    "https://files.ca-1.osf.io/v1/resources/pfhu9/providers/osfstorage/?zip=",
    mode = "wb",
    destfile = path
  )
  unzip(path, exdir = str_remove(path, ".zip"), junkpaths = TRUE)
}

dat <- read_excel(
  "data/mah-lindsay-experiment-3/CuedVsFree_DRM_2022_Item_Data.xlsx"
) |>
  filter(!Exclude) |>
  mutate(
    person = factor(idnumber),
    task = factor(test_type, levels = c("FR", "CR"), labels = c("Free", "Cued")),
    accuracy
  ) |>
  select(person, task, target, accuracy) |>
  # Two observations were miscoded
  mutate(accuracy = if_else(accuracy == 2, 1, accuracy)) |> 
  arrange(task, person, target)
```

With a preregistered Pitman-Morgan test, @mahVariabilitySubjectsFree2024 found that participants who completed the cued recall task were more heterogeneous in their memory performance---the proportion of target words correctly recalled---than those in the free recall group: The Cued:Free recall between-person memory performance variance ratio was 1.33 (with a [1.14, 1.54] 95% bootstrap interval). @mahVariabilitySubjectsFree2024, across three experiments, confirmed this result by comparing models that did and did not allow for distinct between-person variabilities in each group.

```{r}
#| label: tbl-dat2
#| tbl-cap: "Six rows of example dataset 2 (Mah \\& Lindsay, 2023; Exp 3)."

dat |>
  slice(4:6, .by = task) |> 
  rename_with(~str_to_sentence(.x)) |> 
  kable()
```

Let us now see how our earlier descriptions of heterogeneity can be usefully extended to group differences. We ask three questions about differences in heterogeneity: (1) To what extent is memory performance more variable *between people* in the cued recall task compared to the free recall task? (2) To what extent is memory performance more variable *between target words* in cued-versus-free recall tasks? And (3) How consistent is target word heterogeneity across the two tasks: Are target words associated with good memory performance in cued recall experiments the same words that are associated with good memory performance in free recall experiments?

To answer these questions, we model the $i$th total recall accuracy in 1 to `r nrow(dat)`, of person $j$ in 1 to `r length(unique(dat$person))`, word $k$ in 1 to `r length(unique(dat$target))`, and task $m$ in {F (free recall), C (cued recall)} as Bernoulli distributed, where the probability of an accurate answer is determined by the rate parameter $\pi$. As is common with generalized linear models, we model the rate parameter through a nonlinear link function. In this example, we use the cumulative normal distribution function ($\Phi$, or "probit"), but other link functions are also available, such as the common logit. Consequently, it is the "linear predictor" $\eta$ that we then model as a linear combination of the predictors. We write this model as

$$
\begin{align*}
\text{Accuracy}_{ijkm} &\sim \operatorname{Bernoulli}\left(\pi_{jkm}\right) \\
\pi_{jkm} &= \Phi\left(\eta_{jkm}\right) \\
\eta_{jkm} &= \beta_{m} + \gamma_{jm} + \delta_{km} \\
\gamma_{[m:F]} &\sim 
  \operatorname{Normal}\left(0, \tau_{\gamma_{[m:F]}} \right) \\
\gamma_{[m:C]} &\sim 
  \operatorname{Normal}\left(0, \tau_{\gamma_{[m:C]}} \right) \\
\begin{bmatrix} 
  \delta_{[m:F]} \\ \delta_{[m:C]}
\end{bmatrix} &\sim 
  \operatorname{MVN}\left(
  \begin{bmatrix} 0 \\ 0 \end{bmatrix}, 
  \begin{pmatrix} 
    \tau_{\delta_{[m:F]}} & \\ 
    \rho_\delta &\tau_{\delta_{[m:C]}} 
  \end{pmatrix}
\right).
\end{align*}
$$ {#eq-m2-1}

This Model 2 (@eq-m2-1) of memory performance is similar to our Model 1 of valence effects above, but contains two sources of heterogeneity (persons, whose parameters we represent with $\gamma$, and target words, whose parameters we write with $\delta$). In addition, instead of coding the task type (free recall vs. cued recall) using predictor coding schemes such as contrast or dummy coding, we have index-coded task using subscripts $_{m:F}$ to stand for Free recall parameters, and $_{m:C}$ for parameters pertaining to the Cued recall task. This reparameterization allows quantifying heterogeneity in memory performance separately for the two tasks, rather than for (if using contrast coding) the average task and their difference.

Note also that we model $\gamma$ using two independent normal distributions, and $\delta$ with a multivariate normal distribution. Because different persons participated in the two tasks, we cannot assess whether participant-specific abilities are correlated across the tasks. But we can assess this for target items, which were common across the tasks.

```{r}
#| label: fit-brms-ml3
#| message: false

model <- bf(
  accuracy ~ 0 + task + 
    (1 | gr(person, by = task)) + 
    (0 + task | target) 
)
fit2 <- brm(
  model,
  family = bernoulli("probit"),
  data = dat,
  silent = 0,
  file = "models/brm-fit-ml3-target",
  control = list(adapt_delta = .95)
)
```

```{r}
#| label: ppcheck-2
#| eval: false

# Quick model checking
pairs(fit2$fit, pars = variables(fit2)[1:7])
mcmc_plot(fit2, type = "rhat_hist")
pp_check(fit2, type = "bars_grouped", group = "task", ndraws = 100)
```

We estimated Model 2 exactly as Model 1, by taking 4,000 random draws from its posterior distribution [@burknerBrmsPackageBayesian2017]. We then confirmed graphically and numerically that the estimation algorithm had converged, and that the model performed adequately using a graphical posterior predictive check [@gelmanBayesianDataAnalysis2013]. We summarise the model's posterior distribution in @tbl-fit-2.

```{r}
#| label: tbl-fit-2
#| tbl-cap: Parameter estimates from Model 2.

m2_parnames <- c(
  "$\\beta_{m:F}$", 
  "$\\beta_{m:C}$",
  "$\\tau_{\\gamma_{m:F}}$", 
  "$\\tau_{\\gamma_{m:C}}$",
  "$\\tau_{\\delta_{m:F}}$", 
  "$\\tau_{\\delta_{m:C}}$",
  "$\\rho_\\delta$"
)

post2 <- as_draws_df(
  fit2, 
  variable = c("b_", "sd_", "cor_"), 
  regex = TRUE
)

fit2 |> 
  parameters(effects = "all", centrality = "mean", dispersion = TRUE) |>
  tibble() |>
  mutate(
    Mean = number(Mean, .01),
    SD = number(SD, .001),
    CI = str_glue("[{number(CI_low, .01)}, {number(CI_high, .01)}]")
  ) |>
  select(Parameter, Mean, SD, `95% CI` = CI) |> 
  mutate(Parameter = m2_parnames) |> 
  kable()
```

```{r}
#| label: calc-2-heterogeneity

# Calculate all heterogeneity metrics and differences
post2 <- post2 |> 
  mutate(
    # Persons
    dist_person_free = dist_normal(b_taskFree, `sd_person__Intercept:taskFree`),
    dist_person_cued = dist_normal(b_taskCued, `sd_person__Intercept:taskCued`),
    pd_person_free = 1 - cdf(dist_person_free, 0),
    pd_person_cued = 1 - cdf(dist_person_cued, 0),
    ratio_person_free = abs(`sd_person__Intercept:taskFree` / b_taskFree),
    ratio_person_cued = abs(`sd_person__Intercept:taskCued` / b_taskCued),
    hi_low_free = b_taskFree + qnorm(0.05) * `sd_person__Intercept:taskFree`,
    hi_high_free = b_taskFree + qnorm(0.95) * `sd_person__Intercept:taskFree`,
    hi_low_cued = b_taskCued + qnorm(0.05) * `sd_person__Intercept:taskCued`,
    hi_high_cued = b_taskCued + qnorm(0.95) * `sd_person__Intercept:taskCued`,
    # Differences
    b_difference = b_taskCued - b_taskFree,
    sd_person_difference = 
      `sd_person__Intercept:taskCued` - `sd_person__Intercept:taskFree`,
    sd_person_ratio = 
      `sd_person__Intercept:taskCued` / `sd_person__Intercept:taskFree`,
    pd_person_difference = pd_person_cued - pd_person_free,
    ratio_person_difference = ratio_person_cued - ratio_person_free,
    hi_low_difference = hi_low_cued - hi_low_free,
    hi_high_difference = hi_high_cued - hi_high_free,
    # Targets
    dist_target_free = dist_normal(b_taskFree, `sd_target__taskFree`),
    dist_target_cued = dist_normal(b_taskCued, `sd_target__taskCued`),
    pd_target_free = 1 - cdf(dist_target_free, 0),
    pd_target_cued = 1 - cdf(dist_target_cued, 0),
    ratio_target_free = abs(`sd_target__taskFree` / b_taskFree),
    ratio_target_cued = abs(`sd_target__taskCued` / b_taskCued),
    # Differences
    sd_target_difference = 
      `sd_target__taskCued` - `sd_target__taskFree`,
    pd_target_difference = pd_target_cued - pd_target_free,
    ratio_target_difference = ratio_target_cued - ratio_target_free,
    .before = starts_with("cor_")
  ) |> 
  select(-starts_with("dist_"))

post2_sum <- post2 |> 
  mutate(
    across(b_taskFree:b_taskCued, list(p = ~pnorm(.x)))
  ) |> 
  summarize_draws(
    mean, ~quantile2(.x, probs = c(0.025, 0.975))
  ) |> 
  mutate(
    x = str_glue("{number(mean, .01)} [{number(q2.5, .01)}, {number(q97.5, .01)}]")
  )
```

## Comparing between-person heterogeneity across tasks

Descriptively, we reproduced @mahVariabilitySubjectsFree2024's finding that participants' memory performance was more heterogeneous in the cued recall task than in the free recall task (rows 3 and 4 in @tbl-fit-2). We show the relevant estimated quantities, and the implied heterogeneity distributions in @fig-2-person.

The top panel of @fig-2-person A illustrates the posterior distributions of memory performance for the average person in the free and cued recall tasks, and their difference (cued - free recall): While recall performance was `r post2_sum$x[post2_sum$variable=="b_taskFree"]` and `r post2_sum$x[post2_sum$variable=="b_taskCued"]` probits in the free and cued recall conditions, respectively, the corresponding probabilities were `r post2_sum$x[post2_sum$variable=="b_taskFree_p"]` and `r post2_sum$x[post2_sum$variable=="b_taskCued_p"]`. Notice that the model's parameters refer to probits (standard normal deviates, or "z-scores") because of the link function we used. Therefore, for example zero translates to 50% accuracy.

```{r}
#| label: fig-2-person-calc

x <- seq(-2.2, 2.2, length = 201)

tmp_person <- bind_rows(
  "Free" = post2 |>
    select(b_taskFree, `sd_person__Intercept:taskFree`) |>
    calculate_density(b_taskFree, `sd_person__Intercept:taskFree`) |> 
    select(x, pdf, cdf),
  "Cued" = post2 |>
    select(b_taskCued, `sd_person__Intercept:taskCued`) |>
    calculate_density(b_taskCued, `sd_person__Intercept:taskCued`) |> 
    select(x, pdf, cdf),
  .id = "Task"
)  |> 
  group_by(x, Task) |>
  curve_interval(.width = 0.9)
```

```{r}
#| label: model-2-ratio
#| include: false

# Some ratios are weird
post2 |> 
  select(
    starts_with("b_"), 
    starts_with("sd_person"), 
    starts_with("ratio_person"), 
    -ends_with("_difference")
  ) |> 
  select(
    contains("free")
  ) |> 
  filter(ratio_person_free > 10)
```

```{r}
#| label: fig-2-person
#| fig-height: 3.2
#| fig-cap: "Estimated between-person heterogeneity in memory performance in Free recall and Cued recall tasks from Model 2. A. Histograms of 4,000 posterior draws from the model parameters and their transformations, with points and intervals showing posterior means and 95%CIs. Differences are calculated as Cued - Free recall. $p^+$ indicates the proportion of the population whose proportion correct is predicted to be above 50%. Heterogeneity ratio indicates standard deviations divided with their respective means (we truncated this axis at [-7, 7] for clarity. B. Probability density (top) and cumulative distribution functions (bottom) of the two groups' heterogeneity distributions (green: free recall, red: cued recall). The densities, points, and intervals on the left y-axis of the bottom panel indicate approximate posterior densities, with means and 95%CIs, of the proportions of the populations with memory performance above 0.5."

p2_pars_person <- post2 |> 
  select(contains("b_") | contains("person"), -sd_person_ratio) |> 
  pivot_longer(everything()) |> 
  mutate(
    name = str_to_lower(name) |> 
      str_remove("_person") |> 
      str_remove("_intercept:task") |> 
      str_remove("task")
  ) |> 
  separate(name, c("type", "group")) |> 
  mutate(
    type = factor(
      type, 
      levels = c("b", "sd", "pd", "ratio"),
      labels = c("Mean", "SD", "p+", "Heterogeneity ratio")
    ),
    group = factor(
      group,
      levels = c("free", "cued", "difference"),
      labels = c("Free", "Cued", "Difference")
    ) |> fct_rev(),
    value = if_else(type == "Heterogeneity ratio" & abs(value) > 7, NaN, value)
  ) |> 
  ggplot(aes(value, group, col = group, fill = group)) +
  scale_color_brewer(
    "Recall task",
    palette = "Dark2",
    aesthetics = c("color", "fill"),
    direction = -1
  ) +
  scale_y_discrete(
    expand = expansion(c(0.1, 0.25))
  ) +
  scale_x_continuous(
    "Parameter value",
    expand = expansion(0.025),
    breaks = extended_breaks(6)
  ) +
  stat_histinterval(
    slab_alpha = .25,
    breaks = 50,
    normalize = "panels",
    .width = .95,
    size = 1,
    justification = 0.01
  ) +
  facet_wrap("type", ncol = 1, scales = "free") +
  theme(
    legend.position = "none",
    axis.title.y = element_blank()
  )

p2_cdf_person <- tmp_person |> 
  ggplot(aes(x = x)) +
  aes(y = cdf, ymin = cdf.lower, ymax = cdf.upper, col = Task, fill = Task) +
  geom_vline(
    xintercept = 0, linewidth = .2, alpha = .25
  ) +
  scale_color_brewer(
    "Recall task",
    palette = "Dark2",
    aesthetics = c("color", "fill"),
    direction = -1
  ) +
  scale_x_continuous(
    TeX("$\\Phi(Pr(Correct))$"),
    expand = expansion(0.01),
    breaks = extended_breaks(5),
    sec.axis = sec_axis(
      name = "Proportion correct",
      trans = ~pnorm(.), 
      breaks = c(0.05, .1, .3, .5, .7, .9, .95),
      labels = c(".05", ".1", ".3", ".5", ".7", ".9", ".95")
    )
  ) +
  scale_y_continuous(
    breaks = extended_breaks(7),
    expand = expansion(c(0.005, 0.005))
  ) +
  ylab("CDF") +
  geom_ribbon(
    alpha = .2, col = NA
  ) +
  geom_line(
    linewidth = .5
  ) +
  theme(
    legend.position = "none",
    panel.border = element_rect(fill = NA)
  )

p2_pdf_person <- p2_cdf_person %+% 
  aes(y = pdf, ymin = pdf.lower, ymax = pdf.upper) +
  ylab("PDF")

p2_cdf_person_inset <- post2 |> 
  select(pd_person_free, pd_person_cued) |> 
  pivot_longer(everything()) |> 
  ggplot() +
  scale_y_01 +
  scale_x_continuous(
    expand = expansion(0)
  ) +
  scale_color_brewer(
    "Recall task",
    palette = "Dark2",
    aesthetics = c("color", "fill"),
    direction = -1
  ) +
  stat_slab(
    aes(y = value, fill = name),
    side = "right",
    .width = .95,
    size = 1,
    scale = 0.5,
    alpha = .2,
    justification = 0.025
  ) +
  stat_pointinterval(
    aes(y = value, col = name),
    side = "right",
    .width = .95,
    size = 1,
    justification = 0.025
  ) +
  theme_void() +
  theme(legend.position = "none")

p2_cdf_person <- p2_cdf_person +
  inset_element(
    p2_cdf_person_inset,
    0, 0, .2, 1, 
    align_to = "panel", 
    on_top = TRUE
  )

p2_pcdf_person <- p2_pdf_person / p2_cdf_person

(p2_pars_person | wrap_elements(full = p2_pcdf_person)) +
  plot_annotation(tag_levels = "A")
```

More importantly, the second row in @fig-2-person A describes the posterior distributions of the between-person standard deviations in memory ability in the free and cued recall tasks, and their difference (cued - free recall). The standard deviation was `r post2_sum$x[post2_sum$variable=="sd_person_difference"]` probits greater in the cued recall task (ratio: `r post2_sum$x[post2_sum$variable=="sd_person_ratio"]`).

The third row of @fig-2-person A shows the estimated proportions of individuals whose memory performance exceeded 50% ($p^+$), and their difference. The model estimates the proportion of individuals who recall over 50% of items to be `r post2_sum$x[post2_sum$variable=="pd_person_difference"]` greater in the cued than in the free recall task. Note that this quantity refers to population proportions and is not a z-score.

Perhaps surprisingly, even though the absolute measures of heterogeneity differed greatly between the two recall tasks, the bottom row of @fig-2-person A shows that the degree of relative heterogeneity is virtually identical across the two tasks. This heterogeneity ratio's mathematical equivalent is commonly known as the coefficient of variation (CV), which is used frequently in many areas of psychological research, such as psychophysics. In those areas, a common finding is that while there might be experimental effects on an individual's response distribution's mean or dispersion, the CV frequently remains stable across conditions (disperion tends to grow larger with increased stimulus strength, for example). Our use of the heterogeneity ratio in this example calls to mind those applications and findings regarding the coefficient of variation.

Moreover, we truncated the Heterogeneity ratio panel's x-axis at [-7, 7] because ratios of two normal distributions with zero means are Cauchy distributed. Sampling from a Cauchy distribution frequently returns extreme draws because of the distribution's thick tails. Consequently, posterior draws of $\frac{\tau}{\beta}$ can approximate a Cauchy-distribution and therefore exhibit frequent extreme values. These extreme values would obscure the bulk of the distribution if the axis was not truncated. More colloquially, near-zero means will necessarily lead to infinite ratios, and consequently this coefficient can be very sensitive to small changes in the mean value. The difference in ratios is very uncertain for the same reason.

We also depict the heterogeneity distribution's posterior distribution as a PDF and a CDF in @fig-2-person B. Unlike in @fig-2 where we drew random draws of the functions' posteriors as thin lines, to reduce overplotting @fig-2-person instead aggregates the posteriors to means (dark line) and 95% credibility ribbons (light areas). These figures allow for concise and complementary descriptions of (differences in) heterogeneity in the two tasks. In other words, they allow visually comparing the population distributions of memory performance across the cued and free-recall tasks.

First, we see that the majority of the free recall group's CDF (green) is to the left of zero (50% recall), indicating that the majority of this population is predicted to recall less than half of items. This information is described in more detail in the small posterior densities and point-intervals on the left y-axis: The model predicts above-50% performance only for a proportion of `r post2_sum$x[post2_sum$variable=="pd_person_free"]` of the population. Second, we see that the slope of the cued recall CDF (red) is less steep and to the right to that of the free recall CDF: The between-person distribution of memory abilities is more dispersed in the cued than in the free recall task, and `r post2_sum$x[post2_sum$variable=="pd_person_cued"]` individuals in that group are predicted to perform above 50%.

Finally, we turn to the heterogeneity interval (HI). The $\textit{HI}_{90}$'s lower bound in the free recall task is `r post2_sum$x[post2_sum$variable=="hi_low_free"]`, and `r post2_sum$x[post2_sum$variable=="hi_low_cued"]` in the cued recall task. While this 5th percentile of the heterogeneity distribution was not credibly different across the two tasks (Cued - Free recall; `r post2_sum$x[post2_sum$variable=="hi_low_difference"]`), the 95th percentiles differed at the 95% credibility level (the Cued recall upper $\textit{HI}_{90}$ limit was `r post2_sum$x[post2_sum$variable=="hi_high_difference"]` probits greater). Studying @fig-2-person B closely makes another implication of the different standard deviations clear: While the average person likely has greater memory performance in the cued recall task, the model predicts that there are also more individuals with very poor performances in the cued recall condition.

## Comparing between-target heterogeneity across tasks

Between-person heterogeneity is typically the more theoretically important phenomenon for psychologists than differences in model parameters between other randomly sampled study units, such as stimuli. However, examining heterogeneity in other sampled units can be both theoretically and methodologically important [@juddTreatingStimuliRandom2012; @juddExperimentsMoreOne2017]. We next turn to our second and third questions regarding potential differences and consistencies in between-target word heterogeneity.

```{r}
#| label: fig-2-target-calc

x <- seq(-2.2, 2.2, length = 201)

tmp_target <- bind_rows(
  "Free" = post2 |>
    select(b_taskFree, sd_target__taskFree) |>
    calculate_density(b_taskFree, `sd_target__taskFree`) |> 
    select(x, pdf, cdf),
  "Cued" = post2 |>
    select(b_taskCued, `sd_target__taskCued`) |>
    calculate_density(b_taskCued, `sd_target__taskCued`) |> 
    select(x, pdf, cdf),
  .id = "Task"
)  |> 
  group_by(x, Task) |>
  curve_interval(.width = 0.9)
```

```{r}
#| label: fig-2-target
#| fig-height: 4
#| fig-width: 7.4
#| fig-cap: "Heterogeneity between target words in memory performance in Free recall and Cued recall tasks from Model 2. A. Histograms of 4,000 posterior draws from the model parameters and their transformations, with points and intervals showing posterior means and 95\\%CIs. Differences calculated as Cued - Free recall. B. Probability density (top) and cumulative distribution functions (bottom) of the two tasks' heterogeneity distributions (green: free recall, red: cued recall). The densities, points, and intervals on the left y-axis of the bottom panel indicate approximate posterior densities, with means and 95\\%CIs, of the proportions of the populations with memory performance above chance. C. Posterior mean (dark), and 100 posterior draws (light) of the correlation between target words' proportions correct in the free (x-axis) and cued recall (y-axis) tasks. Ellipses indicate the 90th percentile of the bivariate normal distribution."

p2_pars_target <- post2 |> 
  select(contains("target")) |> 
  rename_with(
    ~str_to_lower(.) |> 
      str_remove("target_") |> 
      str_remove_all("_task")
  ) |> 
  pivot_longer(everything()) |> 
  separate(name, c("type", "group"), extra = "merge") |> 
  mutate(
    type = factor(
      type, 
      levels = c("sd", "pd", "ratio", "cor"),
      labels = c("SD", "p+", "Heterogeneity ratio", "Cor(Free, Cued)")
    ),
    group = factor(
      group,
      levels = c("free", "cued", "difference", "free_cued"),
      labels = c("Free", "Cued", "Difference", "Correlation")
    ) |> fct_rev(),
    value = if_else(type == "Heterogeneity ratio" & abs(value) > 5, NaN, value)
  ) |> 
  ggplot(aes(value, group, color = group, fill = group)) +
  scale_color_manual(
    "Recall task",
    values = c(rep("#7570B3", 2), "#D95F02", "#1B9E77"),
    aesthetics = c("color", "fill")
  ) +
  scale_y_discrete(
    expand = expansion(c(0.1, 0.25))
  ) +
  scale_x_continuous(
    "Parameter value",
    expand = expansion(0.1)
  ) +
  stat_histinterval(
    breaks = 50,
    normalize = "panels",
    .width = .95,
    size = 1,
    slab_alpha = 0.2,
    justification = 0.01
  ) +
  facet_wrap("type", ncol = 1, scales = "free") +
  theme(
    legend.position = "none",
    axis.title.y = element_blank()
  )

p2_cdf_target <- tmp_target |> 
  ggplot(aes(x = x)) +
  aes(y = cdf, ymin = cdf.lower, ymax = cdf.upper, col = Task, fill = Task) +
  scale_color_brewer(
    "Recall task",
    palette = "Dark2",
    aesthetics = c("color", "fill"),
    direction = -1
  ) +
  scale_x_continuous(
    TeX("$\\Phi(Pr(Correct))$"),
    expand = expansion(0.01),
    breaks = extended_breaks(5),
    sec.axis = sec_axis(
      name = "Proportion correct",
      trans = ~pnorm(.), 
      breaks = c(0.05, .1, .3, .5, .7, .9, .95),
      labels = c(".05", ".1", ".3", ".5", ".7", ".9", ".95")
    )
  ) +
  scale_y_continuous(
    breaks = extended_breaks(7),
    expand = expansion(c(0.005, 0.005))
  ) +
  ylab("CDF") +
  geom_ribbon(
    alpha = .2, col = NA
  ) +
  geom_line(
    linewidth = .5
  ) +
  theme(
    legend.position = "none",
    panel.border = element_rect(fill = NA)
  )

p2_pdf_target <- p2_cdf_target %+% 
  aes(y = pdf, ymin = pdf.lower, ymax = pdf.upper) +
  ylab("PDF")

p2_cdf_target_inset <- post2 |> 
  select(pd_target_free, pd_target_cued) |> 
  pivot_longer(everything()) |> 
  ggplot() +
  scale_y_01 +
  scale_x_continuous(
    expand = expansion(0)
  ) +
  scale_color_brewer(
    "Recall task",
    palette = "Dark2",
    aesthetics = c("color", "fill"),
    direction = -1
  ) +
  stat_slab(
    aes(y = value, fill = name),
    side = "right",
    .width = .95,
    size = 1,
    scale = 0.5,
    alpha = .2,
    justification = 0.025
  ) +
  stat_pointinterval(
    aes(y = value, col = name),
    side = "right",
    .width = .95,
    size = 1,
    justification = 0.025
  ) +
  theme_void() +
  theme(legend.position = "none")

p2_cdf_target <- p2_cdf_target +
  inset_element(
    p2_cdf_target_inset,
    0, 0, .2, 1, 
    align_to = "panel", 
    on_top = TRUE
  )

p2_pcdf_target <-  p2_pdf_target / p2_cdf_target

# Ellipses
.ellipse <- function(data) {
  data |>
    mutate(
      e = pmap(
        list(
          cor_target__taskFree__taskCued,
          sd_target__taskFree,
          sd_target__taskCued,
          b_taskFree,
          b_taskCued
        ),
        ~ ellipse(
          x = ..1,
          scale = c(..2, ..3),
          centre = c(..4, ..5),
          level = .90
        ) |>
          as_tibble()
      )
    ) |>
    unnest(e)
}
samples <- as_draws_df(
  fit2,
  variable = c(
    "b_",
    "sd_",
    "cor_"
  ),
  regex = TRUE
)

set.seed(99)
ellipse_samples <- samples |>
  slice_sample(n = 100) |>
  .ellipse()

ellipse_median <- samples |>
  summarise_draws(median) |>
  pivot_wider(names_from = variable, values_from = median) |>
  .ellipse()

# Target word coefficients, data and model
dat2_target_coefs <- left_join(
  dat |> 
    summarise(
      p = qnorm(mean(accuracy)),
      .by = c(task, target)
    ) |> 
    pivot_wider(
      names_from = task, values_from = p
    ),
  coef(fit2)$target |> 
    as.data.frame() |> 
    rownames_to_column("target") |> 
    tibble() |> 
    select(
      target, 
      .Free = Estimate.taskFree,
      .Cued = Estimate.taskCued
    )
)

p2_ellipse <- ellipse_median |>
  ggplot(aes(x, y)) +
  coord_cartesian(
    xlim = c(-1.8, 1.5),
    ylim = c(-1.5, 1.8)
  ) +
  geom_vline(
    xintercept = 0, linewidth = .1, linetype = "dashed"
  ) +
  geom_hline(
    yintercept = 0, linewidth = .1, linetype = "dashed"
  ) +
  geom_abline(
    linewidth = .1, linetype = "dashed"
  ) +
  scale_x_continuous(
    TeX("$\\Phi(Pr(Correct))~Free~recall$"),
    breaks = seq(-1.5, 1.5, by = .5),
    sec.axis = sec_axis(
      trans = ~ pnorm(.),
      name = "Pr(Correct) Free recall",
      breaks = c(0.05, .1, .3, .5, .7, .9, .95),
      labels = c(".05", ".1", ".3", ".5", ".7", ".9", ".95")
    )
  ) +
  scale_y_continuous(
    TeX("$\\Phi(Pr(Correct))~Cued~recall$"),
    breaks = seq(-1.5, 1.5, by = .5),
    sec.axis = sec_axis(
      trans = ~ pnorm(.),
      name = "Pr(Correct) Cued recall",
      breaks = c(0.05, .1, .3, .5, .7, .9, .95),
      labels = c(".05", ".1", ".3", ".5", ".7", ".9", ".95")
    )
  ) +
  geom_path(
    data = ellipse_samples,
    aes(group = .draw),
    alpha = .075, color = "#7570B3"
  ) +
  geom_path(
    color = "#7570B3"
  ) +
  theme(
    aspect.ratio = 1
  )

(wrap_elements(full = p2_pars_target) | wrap_elements(full = p2_pcdf_target) | p2_ellipse) +
  plot_annotation(tag_levels = "A")
```

The results regarding differences in heterogeneity across target words' proportions correct were similar to those as observed regarding heterogeneity in people's memory performances. @fig-2-target A shows that heterogeneity (standard deviations) in memory performance was greater when words appeared in the cued recall task. The interpretation of this difference is quantitatively similar to that observed about people above: Both people and target words exhibit greater memory performance variability in the cued recall than in the free recall task. However, because @mahVariabilitySubjectsFree2024 used the same target words across the two tasks, this interpretation is subtly more complex: This difference holds even when the exact same units---target words, in this example---are used in the two different tasks.

Moreover, we observe similar differences in between-target word heterogeneity between the two tasks as we did above regarding between-person heterogeneity: The model predicts a greater proportion of words to elicit greater than 50% accurate recall in the cued recall than in the free recall task. Yet, the ratio of the heterogeneity distribution's standard deviation to its mean again appeared very similar across the two tasks.

The design of @mahVariabilitySubjectsFree2024's study and our analysis of the dataset afforded an additional piece of information: Because the same target words were used across the two tasks, we could examine the consistency of target words' heterogeneity across the two tasks (question (3)). There was a clear positive correlation between target words' rates of correct responses across the free and cued recall tasks (bottom panel of @fig-2-target A and C). The posterior mean and 95%CI of this correlation was `r post2_sum$x[post2_sum$variable=="cor_target__taskFree__taskCued"]`.

This correlation's substantive interpretation is that words that are likely better recalled in the free recall task are also likely to be those that are better recalled in the cued recall task. (@bolgerCausalProcessesPsychology2019 found a conceptually similar result regarding valence effects' stability across time but within individuals: Individuals whose valence effect was stronger at Time 1 were also those whose valence effect was likely to be stronger at Time 2, one week later.) For example, the tools presented here would facilitate seeking for theoretically interesting conditions where this consistency is violated.

Our study of Model 2's results might indicate exciting new avenues for this line of inquiry. One explanation for the between-task difference in between-person heterogeneity is that participants might adopt different recall strategies in the two tasks [@mahVariabilitySubjectsFree2024]. Our additional results suggest that such a mechanism may not be a complete account of differences in memory performance heterogeneity: Target words are presumably invariant regarding memory strategies, yet we find that accuracy is more heterogeneous across target words in cued than in the free recall task (@fig-2-target A). Second, we observed across both people and target words that the ratio of the between-unit standard deviation to the average effect was nearly identical across the free and cued recall tasks. Finally, given that we operationalized the stability of item difficulties as a correlation across tasks, it might be theoretically important to look for sets of stimuli where this positive correlation did not occur.

# Discussion

In the current work, we illustrated the use of practical descriptors of heterogeneity with examples drawn from social and cognitive psychology. Our aim was to incrementally build on the work of @bolgerCausalProcessesPsychology2019 and others---who have described the importance and available methods for examining heterogeneity in causal effects---by describing how it is both critically important and practically feasible to incorporate uncertainty in analyses and descriptions of heterogeneity. Our currently proposed methods incorporate uncertainty into both modelling of and inferences about heterogeneity.

Although prior work on developing metrics of heterogeneity, and placing experimental effect sizes in context of person-specific effects exists, it has largely ignored estimation uncertainty and thus remained purely descriptive. For example, @gricePersonsEffectSizes2020 describe a method whereby analysts count the number of individuals whose point estimate of an effect is concordant with a hypothesis. But such counting ignores estimation uncertainty in both the person-specific effects and variability among them. By accounting for these uncertainties, the methods described here go beyond description and allow inference to be drawn regarding populations and individuals with confidence. Moreover, counting individuals' parameters provides a description of individuals in the sample, rather than of the population, which was our focus.

Second [@schuetze2024, p.3] suggest that "past efforts to identify heterogeneous effects have yielded a disproportionate number of disappointing, uninterpretable, and non-replicable findings", and suggest low power as one potential antecedent. While perhaps an overstatement, one reason for why previous investigations of heterogeneity may have been suboptimal indeed relates to statistical power: By not duly incorporating and reporting on the uncertainty with which heterogeneity is estimated, investigations are more suspect for reporting substantial heterogeneity where it may not truly exist.

Finally, @bolgerCausalProcessesPsychology2019 provided an extensive discussion of how heterogeneity can be estimated for causal effects in psychology. We directly built on that work to illustrate the benefits and how such descriptions can and should include representations of uncertainty.

We emphasized throughout that a probabilistic (Bayesian) approach is well-positioned to answer the needs of researchers interested in heterogeneity. Bayesian methods allow carrying uncertainty forward from model parameters to descriptors of heterogeneity and beyond. The resulting metrics are useful because they not only convey analysts' expectations regarding heterogeneity, but more fully convey their states of knowledge regarding heterogeneity, including degrees of certainty. In addition, probabilistic modelling, by returning a matrix of samples from the posterior distribution, enables practically straightforward solutions whereby analysts can use familiar data wrangling techniques to easily compare various heterogeneity descriptors across groups. However, some methods described here could be implemented with e.g. joint bootstrap methods, but in our view those require additional practical steps---bootstrapping, for one---and might therefore be less practical.

We believe that psychology, broadly speaking, is methodologically and theoretically ripe for incorporating effect heterogeneity into substantive theories [@bolgerCausalProcessesPsychology2019]. To do so, descriptions of heterogeneity must include measures of uncertainty, and we hope the techniques illustrated here help researchers do so.

## Limitations

In our example analyses, we have brushed many important modelling decisions under the rug in order to focus on the main topic of heterogeneity. First, in the first example, we analyzed reaction times by simply log-transforming reaction times. More informative analyses of RTs would make use of models that make more realistic assumptions about the data generating process underlying reaction time responses, but here we necessarily excluded this complication for reasons of brevity.

Our exposition and interpretation of heterogeneity relies on a critical assumption in line with standard practices in multilevel and generalized linear mixed modelling; that of (multivariate) normality of the unit-level (person, item, etc) parameters. Assuming that random effects are normally distributed is a computationally and conceptually useful fiction, and we recognize that it is unlikely to hold exactly in real psychological phenomena. Haaf, Rouder, and colleagues have explored alternatives to continuous normal distributions of random effects [e.g., @haafDevelopingConstraintBayesian2017; @haafDonAccountingVariability2019].

## Conclusion

We hope that the conceptual, computational, and graphical tools that we have discussed here prove useful to researchers interested in better understanding heterogeneity in psychological phenomena.

# Disclosures

## Data and code availability

The online analysis supplement is readable at {{<meta site-url>}}. Our materials are available at GitHub ({{<meta repo-url>}}) and the OSF ({{<meta osf-url>}}). We reused openly available datasets from @bolgerCausalProcessesPsychology2019 and @mahVariabilitySubjectsFree2024.

## Author contributions

<!-- https://casrai.org/credit/ -->

Conceptualization: MV, NB\
Formal Analysis: MV\
Methodology: MV, NB, MK\
Project Administration: MV\
Software: MV, MK\
Visualization: MV, MK, NB\
Writing â€“ Original Draft: MV\
Writing â€“ Review & Editing: MV, NB, MK

## Competing interests

The author(s) declare no competing interests.

<!-- Format references better in non-html formats -->
::: {.content-hidden when-format="html"}
# References

:::{.refs}
:::
:::

<!-- Material after this only appears in html output -->
::: {.content-visible when-format="html"}

:::
